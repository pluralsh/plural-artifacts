# Default values for notebooks.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  domain: ""
  istioIngress:
    namespace: istio-ingress
    serviceAccount: istio-ingress
  clusterDomain: cluster.local
  userIDHeader: kubeflow-userid
  userIDPrefix: ""
  oidc:
    issuer: ""
    jwksURI: ""
    authEndpoint: ""
    tokenEndpoint: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

webApp:
  replicaCount: 1
  image:
    repository: docker.io/kubeflownotebookswg/jupyter-web-app
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: v1.8.0-rc.0

  podAnnotations:
    sidecar.istio.io/inject: "true"
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    port: 80

  virtualService:
    annotations: {}
    prefix: /jupyter
    gateways:
      - kubeflow-gateway
    # hosts to add additional to the value of global.domain
    hosts: []

  resources:
    requests:
      cpu: 200m
      memory: 226Mi
    limits:
      cpu: 200m
      memory: 226Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}


  config:
    images:
      allowCustomImage: true
      hideRegistry: true
      hideTag: false
      imagePullPolicy:
        value: IfNotPresent
        readOnly: false
      jupyterImages:
        - ghcr.io/pluralsh/kubeflow-notebooks-jupyter-scipy:2.5.0
        - ghcr.io/pluralsh/kubeflow-notebooks-jupyter-pytorch-full:2.5.0
        - ghcr.io/pluralsh/kubeflow-notebooks-jupyter-pytorch-full-cuda:2.5.0
        - ghcr.io/pluralsh/kubeflow-notebooks-jupyter-tensorflow-full:2.6.0
        - ghcr.io/pluralsh/kubeflow-notebooks-jupyter-tensorflow-full-cuda:2.6.0
        - ghcr.io/pluralsh/kubeflow-notebooks-jupyter-go:2.5.0
      vscodeImages:
        - ghcr.io/pluralsh/kubeflow-notebooks-codeserver-python:2.4.0
      rstudioImages:
        - ghcr.io/pluralsh/kubeflow-notebooks-rstudio-tidyverse:2.3.0
    cpu:
      # CPU for user's Notebook
      value: '0.5'
      # Factor by with to multiply request to calculate limit
      # if no limit is set, to disable set "none"
      limitFactor: "1.2"
      readOnly: false
    memory:
      # Memory for user's Notebook
      value: 1.0Gi
      # Factor by with to multiply request to calculate limit
      # if no limit is set, to disable set "none"
      limitFactor: "1.2"
      readOnly: false
    gpus:
      readOnly: false
      # configs for gpu/device-plugin limits of the container
      # https://kubernetes.io/docs/tasks/manage-gpus/scheduling-gpus/#using-device-plugins
      value:
        # the `limitKey` of the default vendor
        # (to have no default, set as "")
        vendor: ""

        # the list of available vendors in the dropdown
        #  `limitsKey` - what will be set as the actual limit
        #  `uiName` - what will be displayed in the dropdown UI
        vendors:
        - limitsKey: "nvidia.com/gpu"
          uiName: "NVIDIA"
        # - limitsKey: "amd.com/gpu"
        #   uiName: "AMD"

        # the default value of the limit
        # (possible values: "none", "1", "2", "4", "8")
        num: "none"
    environment:
      readOnly: false
      value: {}
    workspaceVolume:
      readOnly: false
      # the default workspace volume to be created and mounted
      # (to have no default, set `value: null`)
      value:
        mount: /home/jovyan
        # pvc configs for creating new workspace volumes
        # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#persistentvolumeclaim-v1-core
        newPvc:
          metadata:
            # "{notebook-name}" is replaced with the Notebook name
            name: "{notebook-name}-workspace"
          spec:
            storageClassName: null
            resources:
              requests:
                storage: 5Gi
            accessModes:
              - ReadWriteOnce
    dataVolumes:
      readOnly: false
      # a list of additional data volumes to be created and/or mounted
      value: []
      #value:
      #  - mount: /home/jovyan/datavol-1
      #    newPvc:
      #      metadata:
      #        name: "{notebook-name}-datavol-1"
      #      spec:
      #        resources:
      #          requests:
      #            storage: 5Gi
      #        accessModes:
      #          - ReadWriteOnce
      #
      #  - mount: /home/jovyan/datavol-1
      #    existingSource:
      #      persistentVolumeClaim:
      #        claimName: "test-pvc"
    shm:
      readOnly: false
      # the default state of the "Enable Shared Memory" toggle
      value: true
    configurations:
      readOnly: false
      # the list of PodDefault names that are selected by default
      # (take care to ensure these PodDefaults exist in Profile Namespaces)
      value: []
      #value:
      #  - my-pod-default
    affinityConfig:
      readOnly: false
      # If readonly, the default value will be the only option
      # value is a list of `configKey`s that we want to be selected by default
      value: ""
      # The list of available affinity configs
      options:
        - configKey: "GPU-Inf-Small"
          displayName: "GPU Inference Small"
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: "plural.sh/scalingGroup"
                        operator: "In"
                        values:
                          - "gpu-inf-small-on-demand"
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: "notebook-name"
                        operator: "Exists"
                  namespaces: []
                  topologyKey: "kubernetes.io/hostname"
        - configKey: "GPU-Small"
          displayName: "GPU Small"
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: "plural.sh/scalingGroup"
                        operator: "In"
                        values:
                          - "gpu-small-on-demand"
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: "notebook-name"
                        operator: "Exists"
                  namespaces: []
                  topologyKey: "kubernetes.io/hostname"
        - configKey: "GPU-Inf-Small-Spot"
          displayName: "GPU Inference Small Spot"
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: "plural.sh/scalingGroup"
                        operator: "In"
                        values:
                          - "gpu-inf-small-spot"
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: "notebook-name"
                        operator: "Exists"
                  namespaces: []
                  topologyKey: "kubernetes.io/hostname"
        - configKey: "GPU-Small-Spot"
          displayName: "GPU Small Spot"
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: "plural.sh/scalingGroup"
                        operator: "In"
                        values:
                          - "gpu-small-spot"
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: "notebook-name"
                        operator: "Exists"
                  namespaces: []
                  topologyKey: "kubernetes.io/hostname"
    tolerationGroup:
      readOnly: false
      # The default `groupKey` from the options list
      # If readonly, the default value will be the only option
      value: ""
      # The list of available tolerationGroup configs
      options:
        - groupKey: "spot"
          displayName: "Spot Pool"
          tolerations:
            - key: "plural.sh/capacityType"
              operator: "Equal"
              value: "SPOT"
              effect: "NoSchedule"
        - groupKey: "gpu"
          displayName: "GPU Pool"
          tolerations:
            - key: "nvidia.com/gpu"
              operator: "Exists"
              effect: "NoSchedule"
        - groupKey: "spot-gpu"
          displayName: "GPU Spot Pool"
          tolerations:
            - key: "nvidia.com/gpu"
              operator: "Exists"
              effect: "NoSchedule"
            - key: "plural.sh/capacityType"
              operator: "Equal"
              value: "SPOT"
              effect: "NoSchedule"

controller:
  replicaCount: 1
  istio:
    enabled: true
    gateway: kubeflow/kubeflow-gateway
  culling:
    # Scale notebook replicas to 0 after a given idle time (only works for Jupyter based notebook servers)
    enabled: false
    # The frequency in which we check if the Pod needs culling (minutes)
    checkPeriod: 1
    # The idle time after which to cull the notebook (minutes)
    idleTime: 1440 # 1 day
  image:
    repository: docker.io/kubeflownotebookswg/notebook-controller
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: v1.8.0-rc.0

  service:
    metrics:
      port: 8080

  podAnnotations:
    sidecar.istio.io/inject: "true"
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    prometheus.io/port: "8080"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
    prometheus.io/path: /metrics

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources:
    requests:
      cpu: 100m
      memory: 70Mi
    limits:
      cpu: 100m
      memory: 70Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}


podDefaults:
  replicaCount: 1
  image:
    repository: docker.io/kubeflownotebookswg/poddefaults-webhook
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: v1.8.0-rc.0
  service:
    port: 443

  podAnnotations:
    sidecar.istio.io/inject: "false"
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources:
    requests:
      cpu: 50m
      memory: 50Mi
    limits:
      cpu: 50m
      memory: 50Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}
